% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/doi.R
\name{doiEntry}
\alias{doiEntry}
\alias{doiEntryApp}
\alias{doiEntryUI}
\alias{doiEntryServer}
\alias{translations}
\title{Enter DOIs through a Shiny Module}
\usage{
doiEntryApp()

doiEntryUI(id, i18n = dummy_i18n, width = "100\%", height = "400px", ...)

doiEntryServer(id, example_dois = doi_examples(), char_limit = 100L)

translations()
}
\arguments{
\item{id}{The id string to be namespaced (optional).}

\item{i18n}{A \code{shiny.i18n::Translator} object, or a dummy (default).
Strings inside the module are marked as translatable,
but providing and managing the shiny.i18n translator object
is the responsibility of the module caller.}

\item{width}{The width of the input, e.g. \code{'400px'}, or \code{'100\%'};
see \code{\link[shiny:reexports]{validateCssUnit()}}.}

\item{height}{The height of the input, e.g. \code{'400px'}, or \code{'100\%'}; see
\code{\link[shiny:reexports]{validateCssUnit()}}.}

\item{...}{
  Arguments passed on to \code{\link[shiny:textAreaInput]{shiny::textAreaInput}}
  \describe{
    \item{\code{inputId}}{The \code{input} slot that will be used to access the value.}
    \item{\code{label}}{Display label for the control, or \code{NULL} for no label.}
    \item{\code{value}}{Initial value.}
    \item{\code{cols}}{Value of the visible character columns of the input, e.g. \code{80}.
This argument will only take effect if there is not a CSS \code{width} rule
defined for this element; such a rule could come from the \code{width} argument
of this function or from a containing page layout such as
\code{\link[shiny:fluidPage]{fluidPage()}}.}
    \item{\code{rows}}{The value of the visible character rows of the input, e.g. \code{6}.
If the \code{height} argument is specified, \code{height} will take precedence in the
browser's rendering.}
    \item{\code{placeholder}}{A character string giving the user a hint as to what can
be entered into the control. Internet Explorer 8 and 9 do not support this
option.}
    \item{\code{resize}}{Which directions the textarea box can be resized. Can be one of
\code{"both"}, \code{"none"}, \code{"vertical"}, and \code{"horizontal"}. The default, \code{NULL},
will use the client browser's default setting for resizing textareas.}
  }}

\item{example_dois}{A vector created by, or convertable to \code{\link[=doi]{doi()}},
to be used as as examples.
To initiate the UI with the example,
pass them to \code{\link[=doiEntryUI]{doiEntryUI()}}.}

\item{char_limit}{Integer scalar, giving the maximum number of characters.
To protect shiny against overlong strings, you can limit the maximum
length of strings allowed.
This limit is still enforced server-side, not client-side,
so the protection is not bullet-proof.}
}
\value{
An object of class \code{biblids_doi} as returend by \code{\link[=doi]{doi()}}.
}
\description{
Input, validate and return DOIs in a shiny app.
}
\section{Related Functions and Methods}{
\subsection{Functions}{
\itemize{
\item \code{doiEntryApp}: Test app
}
\itemize{
\item \code{doiEntryUI}: Module UI
}
\itemize{
\item \code{doiEntryServer}: Module server
}
\itemize{
\item \code{translations}: UI Path to shiny.i18n translations file
The package includes some translations for the UI.
You can use those, or provide your own.
}}}

\examples{
cat(brio::read_file(translations()))
}
\seealso{
Other doi: 
\code{\link{doi_api}},
\code{\link{doi_examples}()},
\code{\link{doi_ra}},
\code{\link{doi}()},
\code{\link{regex_doi}()},
\code{\link{view_doi_matches}()}
}
\concept{doi}
